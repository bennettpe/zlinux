#!/bin/bash
# get the iso image and tell user where from
# v0.1 get location of ISO
# v0.2 inform user where it's being taken from
# v0.3 give out error if wget failed
# v0.4 what if no wget or curl available??
# v0.5 fix install directory permissions to include execute bit
# v0.6 fix wget/curl presence test logic; misc improvements
# v0.7 use a consistent log file name for all messages during one run
# v0.8 set the copied install CD contents to writeable so the user can easily
#      delete the directory later

ubuntuURL="http://cdimage.ubuntu.com/releases/18.04/release/ubuntu-18.04.5-server-s390x.iso"
ubuntuISO="ubuntu-18.04.5-server-s390x.iso"

logextension=`date "+%F-%T"`
logit () {
    # log to file all messages
    logdate=`date "+%F-%T"`
    echo "$logdate:$1" >> ./logs/getiso.log.$logextension
}

set_colors() {
    red=`tput setaf 1`
    green=`tput setaf 2`
    yellow=`tput setaf 3`
    blue=`tput setaf 4`
    magenta=`tput setaf 5`
    cyan=`tput setaf 6`
    white=`tput setaf 7`
    blink=`tput blink`
    rev=`tput rev`
    reset=`tput sgr0`
}

get_iso () {
    if command -v wget &> /dev/null
    then
        set -x
        wget "$ubuntuURL"
        set +x
    elif command -v curl &> /dev/null
    then
        set -x
        curl "$ubuntuURL" -o ./ubuntu-18.04.5-server-s390x.iso
        set +x
    fi
}

# main starts here

set_colors

# This script should be called from the main zlinux_install script, which will
# define $SUDO for us
if [[ -z "$SUDO" ]]; then
    echo "${rev}${red}The getiso script should only be called by the zlinux_install script.${reset}"
    exit 1
fi

# check if we have wget or curl installed
foundtool="true"
type wget &> /dev/null || type curl &> /dev/null || foundtool="false"
if [[ $foundtool != "true" ]]; then
    echo "${rev}${red}Neither curl nor wget are available! Please install one now and restart the install script. ${reset}"
    exit 1
fi

# if the file does not exist or less than a seemingly full iso then get it
minimumsize=635576192
if [[ ! -f "$ubuntuISO" ]] || [[ $(wc -c < "$ubuntuISO") -lt $minimumsize ]]; then
    echo "${yellow}Downloading Ubuntu 18.04 ISO from ${cyan}${ubuntuURL}${yellow}."
    echo "This could take a few moments, depending on your internet speed... ${reset}"

    logit "Download start at $(date)"
    get_iso  #go get it
else
    echo "${yellow}You seem to have a downloaded iso file already. I will use it...${reset}"
fi

logit "Download finished at $(date)"

if [ ! -f "$ubuntuISO" ]; then
    echo "${rev}${red}Ubuntu ISO download failed. Bad internet connection? Terminating... ${reset}"
    exit 1
else
    echo "${yellow}ISO is seemingly available now. Installation continues...${reset}"
fi

point=$(mktemp -d)
$SUDO mount -o loop,ro $ubuntuISO $point

mkdir -p install # create dir if not exist
cp -r $point/* install/  # copy install DVD into install/ folder
chmod -R +w install
echo "${yellow}Ubuntu 18.04 was obtained, mounted and copied to install/ ...${reset}"
$SUDO umount $point
rmdir $point

# sanity check if there is stuff in install/
if [[ $(ls install | wc -l) -lt 10 ]]; then
    echo "${rev}${red}Catastrophic error. Not enough files in install/. Either mount or download did not succeed in mysterious ways. Terminating...${reset}"
    exit 1
else
    echo "${yellow}Download, mount, and copy of install DVD has succeeded...${reset}"
fi
